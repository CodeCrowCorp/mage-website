name: ci-prod.yml

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  deployments: write

jobs:
  test:
    if: ${{ github.actor != 'dependabot[bot]' }}
    name: "Test Cloudflare Workers"
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install
        run: npm install

      - name: Test
        run: npm test --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  deploy:
    if: ${{ github.actor != 'dependabot[bot]' }}
    name: Deploy to Cloudflare Workers (Production)
    runs-on: ubuntu-latest
    needs: [test]
    permissions:
      contents: read
      deployments: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install and build
        run: npm install && npm run build

      - name: Publish
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: publish --env production

  create-tag:
    if: ${{ github.actor != 'dependabot[bot]' }}
    name: Create Tag and Release
    runs-on: ubuntu-latest
    needs: [deploy]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get NPM version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main

      - name: Create a tag and release
        uses: ncipollo/release-action@v1.12.0
        with:
          tag: ${{ steps.package-version.outputs.current-version }}
          name: v${{ steps.package-version.outputs.current-version }}
          token: ${{ secrets.GITHUB_TOKEN }}
          generateReleaseNotes: true
        continue-on-error: true